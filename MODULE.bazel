module(
    name = "com_github_bpalermo_maestro",
    version = "1.0.0",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.10.0")
bazel_dep(name = "rules_go", version = "0.54.0")

bazel_dep(name = "gazelle", version = "0.43.0", dev_dependency = True)

bazel_dep(name = "rules_buf", version = "0.3.0")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "rules_oci", version = "2.2.0")
bazel_dep(name = "container_structure_test", version = "1.19.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution
# platforms, using the version given from the `go.mod` file.
go_sdk.from_file(go_mod = "//:go.mod")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")

# All *direct* Go dependencies of the module have to be listed explicitly.
use_repo(
    go_deps,
    "build_buf_gen_go_bufbuild_protovalidate_protocolbuffers_go",
    "build_buf_go_protoyaml",
    "com_github_bufbuild_protovalidate_go",
    "com_github_emicklei_go_restful_v3",
    "com_github_envoyproxy_go_control_plane",
    "com_github_envoyproxy_go_control_plane_envoy",
    "com_github_golang_protobuf",
    "com_github_rs_zerolog",
    "com_github_spf13_cobra",
    "com_github_stretchr_testify",
    "in_gopkg_evanphx_json_patch_v4",
    "io_istio_tools",
    "io_k8s_apimachinery",
    "io_k8s_client_go",
    "io_k8s_utils",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_uber_go_atomic",
)

#go_deps.gazelle_override(
#    build_file_generation = "on",
#    path = "github.com/cncf/xds/go",
#)

buf = use_extension("@rules_buf//buf:extensions.bzl", "buf")
buf.dependency(module = "buf.build/bufbuild/protovalidate:0409229c37804d6187ee0806eb4eebce")

# Override the default version of buf
buf.toolchains(version = "v1.52.1")

# Allow references to labels under @buf_deps
use_repo(buf, "buf_deps")

# Allow people to use `bazel run @rules_buf_toolchains//:buf -- --version`
use_repo(buf, "rules_buf_toolchains")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:6d4a4f40e93615df1677463ca56456379cc3a4e2359308c9e72bc60ffc4a12a9",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
)
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64_v8")
