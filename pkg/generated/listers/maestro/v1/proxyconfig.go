/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	maestrov1 "github.com/bpalermo/maestro/pkg/apis/maestro/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ProxyConfigLister helps list ProxyConfigs.
// All objects returned here must be treated as read-only.
type ProxyConfigLister interface {
	// List lists all ProxyConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*maestrov1.ProxyConfig, err error)
	// ProxyConfigs returns an object that can list and get ProxyConfigs.
	ProxyConfigs(namespace string) ProxyConfigNamespaceLister
	ProxyConfigListerExpansion
}

// proxyConfigLister implements the ProxyConfigLister interface.
type proxyConfigLister struct {
	listers.ResourceIndexer[*maestrov1.ProxyConfig]
}

// NewProxyConfigLister returns a new ProxyConfigLister.
func NewProxyConfigLister(indexer cache.Indexer) ProxyConfigLister {
	return &proxyConfigLister{listers.New[*maestrov1.ProxyConfig](indexer, maestrov1.Resource("proxyconfig"))}
}

// ProxyConfigs returns an object that can list and get ProxyConfigs.
func (s *proxyConfigLister) ProxyConfigs(namespace string) ProxyConfigNamespaceLister {
	return proxyConfigNamespaceLister{listers.NewNamespaced[*maestrov1.ProxyConfig](s.ResourceIndexer, namespace)}
}

// ProxyConfigNamespaceLister helps list and get ProxyConfigs.
// All objects returned here must be treated as read-only.
type ProxyConfigNamespaceLister interface {
	// List lists all ProxyConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*maestrov1.ProxyConfig, err error)
	// Get retrieves the ProxyConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*maestrov1.ProxyConfig, error)
	ProxyConfigNamespaceListerExpansion
}

// proxyConfigNamespaceLister implements the ProxyConfigNamespaceLister
// interface.
type proxyConfigNamespaceLister struct {
	listers.ResourceIndexer[*maestrov1.ProxyConfig]
}
